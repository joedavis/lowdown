.\"	$Id$
.\"
.\" Copyright (c) 2017 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt LOWDOWN 3
.Os
.Sh NAME
.Nm lowdown ,
.Nm lowdown_buf ,
.Nm lowdown_errstr ,
.Nm lowdown_file ,
.Nm lowdown_standalone_close ,
.Nm lowdown_standalone_open
.Nd simple markdown translator library
.Sh LIBRARY
.Lb liblowdown
.Sh SYNOPSIS
.In stdio.h
.In lowdown.h
.Ft void
.Fo lowdown_buf
.Fa "const struct lowdown_opts *opts"
.Fa "const unsigned char *buf"
.Fa "size_t bufsz"
.Fa "unsigned char **ret"
.Fa "size_t *retsz"
.Fa "struct lowdown_meta **meta"
.Fa "size_t *metasz"
.Fc
.Ft "const char *"
.Fo lowdown_errstr
.Fa "enum lowdown_err"
.Fc
.Ft int
.Fo lowdown_file
.Fa "const struct lowdown_opts *opts"
.Fa "FILE *f"
.Fa "unsigned char **ret"
.Fa "size_t *retsz"
.Fa "struct lowdown_meta **meta"
.Fa "size_t *metasz"
.Fc
.Ft void
.Fo lowdown_standalone_close
.Fa "const struct lowdown_opts *opts"
.Fa "unsigned char **ret"
.Fa "size_t *retsz"
.Fc
.Ft void
.Fo lowdown_standalone_open
.Fa "const struct lowdown_opts *opts"
.Fa "const struct lowdown_meta *meta"
.Fa "size_t metasz"
.Fa "unsigned char **ret"
.Fa "size_t *retsz"
.Fc
.Sh DESCRIPTION
The
.Nm lowdown
library parses Markdown into HTML or roff
.Pq Fl ms No or Fl man No macro sets .
There are two forms of invocation.
.Pp
The first,
.Nm lowdown_file ,
operates from an already-opened
.Vt FILE
stream.
The second,
.Nm lowdown_buf ,
operates directly on an input buffer
.Fa buf
of size
.Fa bufsz .
.Pp
Both accept a configuration structure,
.Fa opts ,
which has the following fields:
.Bl -tag -width Ds
.It Va arg
Pointer passed to
.Va msg ,
if not
.Dv NULL .
.It Va feat
Features used during the parse.
This bit-field may have the following bits OR'd:
.Pp
.Bl -tag -width Ds -compact
.It Dv LOWDOWN_TABLES
Allow for GFM tables.
.It Dv LOWDOWN_FENCED
Allow for GFM fenced (language-specific) code blocks.
.It Dv LOWDOWN_FOOTNOTES
MMD style footnotes.
This only supports one-liner footnotes on the same line as the footnote
definition (not the in-line referent).
.It Dv LOWDOWN_AUTOLINK
Autolink
.Li http ,
.Li https ,
.Li ftp ,
.Li mailto ,
and relative links or link fragments.
.It Dv LOWDOWN_STRIKE
Strikethrough support.
.It Dv LOWDOWN_HILITE
Highlight.
Do not use this option.
.It Dv LOWDOWN_SUPER
Allow for super-scripts.
This accepts foo^bar, which puts the parts following the caret until
whitespace in superscripts; or foo^(bar), which puts only the parts in
parenthesis.
.It Dv LOWDOWN_MATH
Recognise single-dollar math mode.
.It Dv LOWDOWN_NOINTEM
Disable emphasis with links.
.It Dv LOWDOWN_SPHD
Require a space between hash marks and header.
.It Dv LOWDOWN_MATHEXP
Recognise double-dollar math mode.
This only works if
.Dv LOWDOWN_MATH
has also been set.
.It Dv LOWDOWN_NOCODEIND
Do not indent code blocks.
.It Dv LOWDOWN_METADATA
Accept MMD metadata.
For the first paragraph to count as meta-data, the first line must have
a colon in it.
Otherwise it's considered a regular paragraph.
.El
.Pp
The default value is zero (none).
.It Va msg
Message function for logging messages.
If
.Dv NULL ,
messages are not logged.
.It Va ofeat
Features used by the output generators.
This bit-field may have the following enabled.
Note that bits are by definition specific to an output
.Va type .
.Pp
For
.Dv LOWDOWN_HTML :
.Pp
.Bl -tag -width Ds -compact
.It Dv LOWDOWN_HTML_SKIP_HTML
Do not render in-document HTML at all.
Note that
.Dv LOWDOWN_HTML_ESCAPE
takes priority if both are specified.
Text within HTML elements remains.
.It Dv LOWDOWN_HTML_ESCAPE
Leaves in-line HTML in its source form as if it were opaque text.
Takes precedence over
.Dv LOWDOWN_HTML_ESCAPE .
.It Dv LOWDOWN_HTML_HARD_WRAP
Retain line-breaks within paragraphs.
.El
.Pp
And for
.Dv LOWDOWN_MAN
and
.Dv LOWDOWN_NROFF :
.Pp
.Bl -tag -width Ds -compact
.It Dv LOWDOWN_NROFF_SKIP_HTML
Do not render in-document HTML at all.
Text within HTML elements remains.
.It Dv LOWDOWN_NROFF_HARD_WRAP
Retain line-breaks within paragraphs.
.It Dv LOWDOWN_NROFF_GROFF
Use GNU extensions (i.e., for
.Xr groff 1 )
when rendering output.
You'll need to include
.Fl m Ar pdfmark
when invoking
.Xr groff 1
for formatting links.
.El
.It Va type
May be set to
.Dv LOWDOWN_HTML
for HTML5 output,
.Dv LOWDOWN_MAN
for
.Fl man
macros, or
.Dv LOWDOWN_NROFF
for
.Fl ms
macros.
Both
.Dv LOWDOWN_MAN
and
.Dv LOWDOWN_MS
will use troff tables, which usually require the
.Xr tbl 1
preprocessor.
.El
.Pp
The results for both functions are stored in
.Fa ret ,
which must later be passed to
.Xr free 3 ,
of size
.Fa retsz .
Both functions also accept the
.Fa meta
and
.Fa metasz
pointers.
If
.Em both
of these are not
.Dv NULL ,
they are set to any meta tags that have been parsed.
It is the caller's job to free the meta structure resources.
Obviously, the meta tags are parsed only if
.Dv LOWDOWN_METADATA
has been provided.
.Pp
The
.Nm lowdown_errstr
is provided to return a human-readable version of
.Vt "enum lowdown_err" .
It returns a generic (en_GB) description.
.Pp
The
.Nm lowdown_standalone_open
and
.Nm lowdown_standalone_close
are utility functions for outputting a document header and footer (in
the given output format) given document meta-data.
.Sh RETURN VALUES
The
.Nm lowdown_file
returns zero if the file-reading sequenced failed, non-zero otherwise.
.Sh SEE ALSO
.Xr groff 1 ,
.Xr lowdown 1
.Sh AUTHORS
The
.Nm
library was forked by
.An Kristaps Dzonsons Aq Mt kristaps@bsd.lv
from
.Lk https://github.com/hoedown/hoedown hoedown .
.Sh CAVEATS
The
.Nm
library functions will invoke
.Xr exit 3
if internal memory allocation fails.
There is no way to catch these conditions.
